#!/usr/bin/python3

"""
transform.aircraft
~~~~~~~~~~~~~~~~~~

This module implements classes for transforming extracted datasets related to
aircraft data.
"""


class AcTrail:

    INTERLACED_LIST_ORDER = ['lat', 'lon', 'alt', 'time', 'gs']

    def __init__(self, reg):
        self.reg = reg
        self.trail = {}

    def feet(val):
        return 10*val

    def load_fr24_flat_list(self, list_):
        """Loads a FR24 flat list
        :param list_: Flat list of data (lat0; lon0; ...; lat1; lon1; ...)
        :type list_: list

        :raises ValueError: list_'s length is not a correct multiple
        """
        if (len(list_) % len(self.INTERLACED_LIST_ORDER)) != 0:
            # list_ must contain only complete points
            raise ValueError('Bad length {}'.format(len(list_)))

        # First de-interlace the data
        pt_list = [list_[x:x+len(self.INTERLACED_LIST_ORDER)]
                   for x in range(0, len(list_),
                                  len(self.INTERLACED_LIST_ORDER))]
        # Create the trail dict
        self.trail = [{self.INTERLACED_LIST_ORDER[field]: pt[field]
                       for field in range(len(self.INTERLACED_LIST_ORDER))} for
                      pt in pt_list]

    def get_max_alt(self):
        # fr24 returns alt expressed in ten feet units
        return int(10*max(pt['alt'] for pt in self.trail))

    def get_max_gs(self):
        # ground speed (not IAS nor TAS)
        return max(pt['gs'] for pt in self.trail)

    def print_stats(self):
        print('Trail stats for reg {}'.format(self.reg))
        print('- samples: {}'.format(len(self.trail)))
        print('- trail duration: {}'.format(self.trail[0]['time'] -
                                            self.trail[-1]['time']))
        print('Max alt: {} ft'.format(self.get_max_alt()))
        print('Max gs: {} kts'.format(self.get_max_gs()))


def main():
    at = AcTrail('F-GZPO')
    interlaced_list = [54.0159,-15.0209,4002.5,1446310245,395,54.0048,-14.9932,3995,1446310236,395,54.0015,-14.9827,3995,1446310230,408,53.9576,-14.6739,4000,1446310131,416,53.9343,-14.4979,3997.5,1446310081,419,53.9107,-14.3222,4000,1446310020,418,53.8827,-14.1157,4000,1446309956,420,53.8547,-13.9125,4000,1446309893,428,53.8256,-13.7047,3997.5,1446309829,431,53.7958,-13.4936,3997.5,1446309765,432,53.7659,-13.2852,3997.5,1446309702,429,53.7375,-13.0896,3997.5,1446309640,430,53.7084,-12.8914,4000,1446309579,430,53.6776,-12.6855,3997.5,1446309516,429,53.6458,-12.4747,4000,1446309455,431,53.6147,-12.2717,4000,1446309390,429,53.5818,-12.0592,3997.5,1446309325,433,53.5488,-11.849,3997.5,1446309261,437,53.5172,-11.6502,3997.5,1446309200,442,53.4826,-11.4356,4000,1446309135,450,53.4465,-11.2137,3997.5,1446309070,454,53.4118,-11.0036,3997.5,1446309007,459,53.3772,-10.7964,4000,1446308946,460,53.3405,-10.5801,3997.5,1446308883,459,53.3053,-10.3741,3997.5,1446308822,457,53.2682,-10.16,3997.5,1446308759,458,53.2323,-9.95573,3997.5,1446308698,454,53.1951,-9.74576,3997.5,1446308636,448,53.1595,-9.54712,3997.5,1446308575,448,53.1232,-9.34727,4000,1446308514,445,53.0853,-9.14032,3997.5,1446308451,446,53.0468,-8.93298,4000,1446308388,445,53.0084,-8.72856,3997.5,1446308325,441,52.9698,-8.52492,4000,1446308261,439,52.9309,-8.32176,3997.5,1446308198,442,52.8928,-8.12455,4000,1446308137,442,52.8526,-7.91901,3997.5,1446308073,446,52.8131,-7.72056,3997.5,1446308012,447,52.7742,-7.52414,3997.5,1446307951,444,52.7349,-7.3304,4000,1446307890,440,52.6957,-7.13695,3997.5,1446307829,436,52.6544,-6.93818,3997.5,1446307766,437,52.6138,-6.74145,4000,1446307702,439,52.5715,-6.5406,3997.5,1446307640,442,52.5293,-6.34131,4000,1446307576,444,52.488,-6.14842,3997.5,1446307515,447,52.444,-5.94452,4000,1446307453,450,52.4003,-5.7444,4000,1446307389,452,52.3553,-5.54092,3997.5,1446307326,451,52.3102,-5.3381,3997.5,1446307263,453,52.2668,-5.14542,3997.5,1446307202,458,52.22,-4.93914,3945,1446307140,461,52.1749,-4.74197,3900,1446307079,461,52.1277,-4.53835,3822.5,1446307016,466,52.0792,-4.33042,3740,1446306953,471,52.0286,-4.11591,3647.5,1446306890,473,51.9828,-3.92326,3572.5,1446306829,471,51.9288,-3.69804,3425,1446306766,480,51.8785,-3.48964,3285,1446306702,487,51.8245,-3.2691,3150,1446306635,487,51.8047,-3.12079,3075,1446306593,475,51.7848,-2.90455,2970,1446306531,465,51.7658,-2.69878,2857.5,1446306470,454,51.7457,-2.5037,2727.5,1446306409,446,51.7241,-2.29797,2575,1446306346,437,51.6986,-2.09831,2420,1446306283,432,51.6626,-1.89989,2235,1446306220,424,51.6285,-1.71394,2052.5,1446306157,412,51.5953,-1.53526,1862.5,1446306094,401,51.5781,-1.44299,1757.5,1446306062,394,51.5614,-1.35369,1650,1446306031,390,51.546,-1.27196,1542.5,1446306000,387,51.5285,-1.1791,1425,1446305969,382,51.5122,-1.09344,1310,1446305936,377,51.4958,-1.00754,1202.5,1446305904,369,51.4901,-0.977932,1172.5,1446305893,364,51.4842,-0.947274,1147.5,1446305880,356,51.478,-0.916061,1130,1446305868,344,51.4726,-0.88915,1112.5,1446305857,334,51.4678,-0.864357,1097.5,1446305846,323,51.4627,-0.836792,1077.5,1446305834,309,51.4582,-0.811462,1057.5,1446305822,299,51.4538,-0.786636,1035,1446305810,287,51.4496,-0.762511,987.5,1446305798,286,51.4452,-0.736752,935,1446305786,284,51.4411,-0.712478,887.5,1446305774,282,51.4364,-0.684738,830,1446305760,280,51.4322,-0.660442,780,1446305748,278,51.4283,-0.637949,732.5,1446305736,275,51.4238,-0.609964,670,1446305722,272,51.4206,-0.583954,612.5,1446305708,270,51.4191,-0.561447,562.5,1446305696,266,51.4179,-0.537949,510,1446305684,263,51.4173,-0.525562,482.5,1446305678,262,51.4168,-0.514679,457.5,1446305672,261,51.4161,-0.498839,420,1446305665,260,51.4153,-0.478973,372.5,1446305654,258,51.4138,-0.433886,265,1446305630,252,51.4152,-0.420301,232.5,1446305624,248,51.4179,-0.41028,217.5,1446305618,242,51.4209,-0.403525,210,1446305612,235,51.4268,-0.394669,195,1446305606,225,51.4454,-0.383928,152.5,1446305585,205,51.4505,-0.385487,145,1446305578,198,51.4571,-0.390778,132.5,1446305571,188,51.4609,-0.39677,122.5,1446305564,181,51.4634,-0.403673,110,1446305558,178,51.4647,-0.411542,87.5,1446305552,177,51.465,-0.421786,57.5,1446305545,178,51.465,-0.430145,35,1446305539,177,51.465,-0.437164,15,1446305532,176,51.4649,-0.445786,0,1446305526,176,51.4649,-0.453568,0,1446305520,162,51.4649,-0.464395,0,1446305512,141,51.4648,-0.476227,0,1446305498,99,51.4648,-0.482082,0,1446305490,64,51.4648,-0.48557,0,1446305479,21,51.4654,-0.487871,0,1446305451,33,51.4658,-0.487778,0,1446305445,31,51.4662,-0.48756,0,1446305438,11,51.4667,-0.48748,0,1446305428,11,51.4674,-0.48718,0,1446305408,7,51.4674,-0.48693,0,1446305402,8,51.4674,-0.4859,0,1446305387,7,51.4674,-0.48535,0,1446305327,5,51.4674,-0.48464,0,1446305317,9,51.4674,-0.48407,0,1446305306,9,51.4674,-0.48334,0,1446305297,9,51.4674,-0.48269,0,1446305286,8,51.4674,-0.48208,0,1446305276,7,51.4674,-0.48109,0,1446305257,4,51.4674,-0.48082,0,1446305159,3,51.4674,-0.48056,0,1446305150,4,51.4674,-0.48016,0,1446305140,6,51.4674,-0.47916,0,1446305124,8,51.4675,-0.4788,0,1446305114,7,51.4708,-0.47869,0,1446305028,6,51.4713,-0.47868,0,1446305013,4,51.4715,-0.47869,0,1446304793,0,51.4714,-0.4789,0,1446304756,2,51.4713,-0.47916,0,1446304742,3,51.4713,-0.47939,0,1446304732,3,51.4713,-0.4797,0,1446304717,3,51.4713,-0.48008,0,1446304706,3,51.4713,-0.48032,0,1446304691,2,51.4713,-0.48048,0,1446304583,0]
    at.load_fr24_flat_list(list_=interlaced_list)
    at.print_stats()

if __name__ == "__main__":
    main()
